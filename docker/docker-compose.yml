version: '3.7'
services:
  vault:
    image: vault:1.13.3
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: "myroot"
      VAULT_ADDR: "http://0.0.0.0:8200"
    ports:
      - "8200:8200"
    networks:
      backend:
        aliases:
          - "vault"
  database:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB:       "ostock_dev"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/1-init.sql
      - ./data.sql:/docker-entrypoint-initdb.d/2-data.sql
    networks:
      backend:
        aliases:
          - "database"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  configserver:
    build:
      context: C:/Users/pavlo/IdeaProjects/Holy project/Configuration Server
      dockerfile: Dockerfile
    image: ostock/configserver:0.0.1-SNAPSHOT
    ports:
      - "8071:8071"
    networks:
      backend:
        aliases:
          - "configserver"
    depends_on:
      - vault
  eurekaserver:
    image: ostock/eurekaserver:0.0.1-SNAPSHOT
    ports:
      - "8070:8070"
    depends_on:
      database:
        condition: service_healthy
      #configserver:
       # condition: service_started
    networks:
      backend:
        aliases:
          - "eurekaserver"

  licensingservice:
    image: ostock/licensing-service:0.0.1-SNAPSHOT
    ports:
      - "8080:8080"
    environment:
      PROFILE: "dev"
      CONFIGSERVER_URI: "http://configserver:8071"
      CONFIGSERVER_PORT: "8071"
      DATABASESERVER_PORT: "5432"
      ENCRYPT_KEY: "IMSYMMETRIC"
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_started
    networks:
      - backend
networks:
  backend:
    driver: bridge